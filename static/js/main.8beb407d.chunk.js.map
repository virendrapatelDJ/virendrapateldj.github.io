{"version":3,"sources":["services/axios.js","components/layout/Navbar.jsx","components/layout/Layout.jsx","components/ui/DashboardOptions.jsx","services/drive-service.js","components/ui/common/ConfirmationDialog.jsx","services/group-service.js","utils/format.js","utils/index.js","services/robin-service.js","components/ui/GreenButton.jsx","components/ui/common/MessageDialog.jsx","components/ui/dashboard/AllRobins/Actions.jsx","components/ui/dashboard/AllRobins/RobinFilterModal.jsx","components/ui/dashboard/AllRobins/RobinCards.jsx","components/ui/dashboard/AllRobins/RobinTable.jsx","components/ui/dashboard/AllRobins/ViewSwitcher.jsx","components/ui/dashboard/AllRobins/AllRobins.jsx","components/ui/dashboard/group/AllGroups.jsx","components/ui/dashboard/group/GroupForm.jsx","services/event-service.js","components/ui/dashboard/attendance/AttendanceMarker.jsx","components/ui/dashboard/attendance/AttendanceRobinFilter.jsx","components/ui/dashboard/attendance/EventSelector.jsx","hooks/index.js","services/report-service.js","components/pages/Reports.jsx","components/ui/reports/AttendanceReportTable.jsx","components/ui/reports/AttendanceReport.jsx","components/ui/reports/DriveReport.jsx","components/ui/schedule-drive/EventTable.jsx","components/ui/schedule-drive/Done.jsx","components/ui/schedule-drive/Schedule.jsx","components/ui/schedule-drive/Upcoming.jsx","components/pages/ScheduleDrive.jsx","components/pages/config.js","components/ui/dashboard/MarkAttendancePage.jsx","services/attendance-service.js","components/ui/dashboard/RobinForm.jsx","components/ui/dashboard/DriveForm.jsx","components/ui/dashboard/AllDrives.jsx","components/ui/dashboard/group/GroupPage.jsx","components/pages/Export.jsx","components/pages/Dashboard.jsx","components/ui/home/UpcomingDrives.jsx","components/pages/Home.jsx","components/pages/Login.jsx","components/pages/Register.jsx","components/private-route/PrivateRoute.jsx","App.js","components/error-handler/ErrorBoundary.jsx","reportWebVitals.js","index.js","services/token-service.js"],"names":["axios","require","default","getToken","instance","create","baseURL","process","interceptors","request","use","config","headers","authorization","console","log","url","response","data","module","exports","Navbar","style","backgroundColor","useContext","AuthContext","onLogout","loggedInUser","useState","isAdmin","setIsAdmin","history","useHistory","useEffect","type","className","to","src","alt","height","id","onClick","localStorage","clear","push","href","Layout","props","children","DashboardOptions","dashBoardCardOptions","onCardClick","options","Divider","map","index","title","icon","Card","Image","wrapped","ui","Content","Header","fontSize","Meta","hidden","Description","getAllDrives","get","then","drives","ConfirmationDialog","show","positiveAction","positiveActionHandler","negativeAction","negativeActionHandler","Modal","closeButton","Title","Body","Footer","Button","color","getAllGroups","groups","getIn2Digit","number","formatTodayDateInYYYYMMDD","now","Date","formatDateInYYYYMMDD","date","getTime","year","getFullYear","month","getMonth","_date","getDate","formatCurrentTimeInHHMM","hh","getHours","mm","getMinutes","formatWithAMandPM","hr","min","toLocaleTimeString","hour12","hour","minute","appendQueryString","object","keyValue","key","queryString","URLSearchParams","toString","separator","includes","getAllRobins","filters","robins","GreenButton","buttonStyle","MessageDialog","button","onOk","isError","Actions","onViewChange","onShowFilterModal","onBulkOptionChange","performBulkAction","bulkOptions","Group","Select","onChange","placeholder","RobinFilterModal","onHide","RobinCards","onSelect","AllRobinContext","selected","robin","email","_id","firstName","lastName","phone","createdAt","Segment","compact","Checkbox","checked","toTitleCase","toDateString","RobinTable","handleClick","event","stopPropagation","split","item","trim","header","rows","group","row","cursor","ViewSwitcher","view","table","cards","React","createContext","AllGroups","onDelete","slug","Icon","name","GroupForm","setGroup","Form","onSubmit","post","createGroup","alert","Field","required","target","value","getAllEvents","query","events","getUpcomingEvents","AttendanceMarker","onMarkAttendance","attendances","isPresent","drive","attendanceOfRobin","find","at","result","length","Message","info","Table","celled","padded","Row","HeaderCell","Cell","toggle","AttendanceRobinFilters","onGroupSelect","onShowEventSelector","text","selectedGroup","setSelectedGroup","class","EventSelector","onClose","selectedEvent","onEventFilterChange","selectedDate","setSelectedDate","errorMessage","setErrorMessage","error","toLocaleDateString","isNaN","List","Item","avatar","time","location","warning","usePrevious","ref","useRef","current","ReportContext","AttendanceReportTable","report","values","setValues","setHeaders","valuesArray","transformedToArray","forEach","attendanceInfo","verticalAlign","v","innerIndex","AttendanceReport","selectedEventInitialValue","AppContext","setEvents","setReport","transformedReport","setTransformedReport","setSelectedEvent","selectedRobin","setSelectedRobin","sub","days","filter","setFilter","robinEventFilter","setRobinEventFilter","prevFilter","prevRobinEvent","isEqual","transformed","sort","x","y","isEmpty","getAttendanceReport","formatDateAndTimeForOption","newFilter","DriveReport","EventTable","handleEventWhatsAppShare","ScheduleDriveContext","scope","createdBy","size","link","Done","Schedule","initialFormState","description","form","setForm","showMessage","setShowMessage","setTimeout","onInputChange","createEvent","created","Input","fluid","label","TextArea","Upcoming","Component","setDrives","host","window","origin","panes","menuItem","render","Tab","Pane","attached","context","message","e","concat","join","open","Provider","menu","secondary","pointing","setRobins","setGroups","showEventSelector","setShowEventSelector","setFilters","setAttendances","eventFilters","setEventFilter","eventId","handleEventSelect","handleGroupSelect","copy","handleMarkAttandance","attendanceData","attendance","attendancesCopy","catch","success","reportsPageTab","renderActiveOnly","formFieldOfTypeTextArea","formFieldOfTypeSelect","formFieldsOfTypeInput","profession","DOB","address","password","formData","setFormData","body","dialogData","setDialogData","validateForm","test","String","toLowerCase","validateEmail","changeDialogState","state","preventDefault","temp","inputTypesText","textAreas","selects","Math","random","getAllFormFields","setViews","selectedRobins","setSelectedRobins","filterModal","setFilterModal","setAlert","setConfirm","confirm","actionChangeData","setActionChangeData","option","setBulkOptions","groupactions","changeSelectionOfAll","select","rbs","r","deleteSelectedRobins","ids","delete","deleteBulkRobins","findIndex","obj","splice","showConfirmDialogForDeletion","makeSelectedAdmin","makeRobinsAdmin","makeSelectedVolunteer","makeRobinsVolunteer","moveToGroup","moveBulkRobinsToGroup","actions","reduce","reduced","updated","selectedRobinsCopy","onDriveSave","onDriveSaveError","showModal","setShowModal","driveToDelete","setDriveToDelete","handleDelete","showModalToConfirm","groupToDelete","setGroupToDelete","confirmDialog","setConfirmDialog","confirmDelete","tabs","err","Error","function","updateRowData","tableRows","setTableRows","filename","pane","TabPane","DashBoard","path","useRouteMatch","exact","UpcomingDrives","JSON","stringify","image","eventDate","today","toLocaleString","extra","Home","Login","onLogin","formValues","setFormValues","dailogInfo","setDialogInfo","as","loginRobin","token","saveToken","Register","PrivateRoute","useLocation","onlyFor","payload","getDecodedToken","pathname","search","App","setAuthContext","authContext","ErrorBoundary","hasError","componentDidCatch","setState","this","responseInterceptorId","Promise","reject","eject","getDerivedStateFromError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","transports","winston","Console","logger","createLogger","ReactDOM","document","getElementById","setItem","getItem","parse","decode_token"],"mappings":"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","file":"static/js/main.8beb407d.chunk.js","sourcesContent":["const axios = require(\"axios\").default;\nconst { getToken } = require(\"../services/token-service\");\n\nconst { REACT_APP_API_ENDPOINT } = process.env;\n\nconst instance = axios.create({\n  baseURL: REACT_APP_API_ENDPOINT,\n});\n\ninstance.interceptors.request.use((config) => {\n  config.headers.authorization = getToken();\n  return config;\n});\n\n// logger\ninstance.interceptors.request.use((config) => {\n  console.log(\"Connecting at\", config.baseURL + config.url);\n  return config;\n});\n\ninstance.interceptors.response.use((response) => {\n  console.log(\"Interceptor\", response.data);\n  return response;\n});\n\nmodule.exports = { axios: instance };\n","import { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n\nconst Navbar = () => {\n  let { REACT_APP_BRAND_COLOR } = process.env;\n\n  const style = {\n    backgroundColor: REACT_APP_BRAND_COLOR,\n  };\n\n  const { onLogout, loggedInUser } = useContext(AuthContext);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    setIsAdmin(loggedInUser && loggedInUser.type === \"ADMIN\");\n  }, [loggedInUser]);\n\n  const logout = () => {\n    localStorage.clear();\n    onLogout();\n    history.push(\"/login\");\n  };\n\n  return (\n    <nav style={style} className=\"navbar navbar-expand-lg navbar-dark\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img src=\"/images/logo.jpeg\" alt=\"logo\" height=\"40\" />\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" to=\"/\">\n                Home\n              </Link>\n            </li>\n\n            {isAdmin && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link \" to=\"/dashboard\">\n                  Dashboard\n                </Link>\n              </li>\n            )}\n            {loggedInUser ? (\n              <li className=\"nav-item\" onClick={logout}>\n                <a className=\"nav-link\" href=\"#\">\n                  Logout\n                </a>\n              </li>\n            ) : (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link \" to=\"/login\">\n                  Login\n                </Link>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport { Navbar };\n","import { Navbar } from \"./Navbar\";\n\nconst Layout = (props) => {\n  return (\n    <div>\n      <Navbar></Navbar>\n      {props.children}\n    </div>\n  );\n};\n\nexport { Layout };\n","import { Card, Divider, Header, Image, Segment } from \"semantic-ui-react\";\nconst DashboardOptions = ({ dashBoardCardOptions, onCardClick }) => {\n  const options = dashBoardCardOptions;\n\n  const createOptions = () => {\n    return options.map(({ title, url, icon }, index) => (\n      <div className=\"mx-auto  col-lg-3 col-md-4 col-sm-4 col-4\" key={index}>\n        <div className=\"mt-4 \">\n          <Card className=\"mx-auto\" onClick={() => onCardClick(url)}>\n            <Image src={icon} wrapped ui={false} className=\"p-4\" />\n            <Card.Content>\n              <Card.Header>\n                <Header\n                  style={{ fontSize: \"1.3em\" }}\n                  className=\"text-center d-none d-sm-block\"\n                >\n                  <span>{title}</span>\n                </Header>\n                <Header\n                  style={{ fontSize: \"0.8em\" }}\n                  className=\"text-center mt-4 d-block d-sm-none\"\n                >\n                  <span>{title}</span>\n                </Header>\n              </Card.Header>\n              <Card.Meta>\n                <span hidden className=\"date\">\n                  Joined in 2015\n                </span>\n              </Card.Meta>\n              <Card.Description></Card.Description>\n            </Card.Content>\n          </Card>\n        </div>\n      </div>\n    ));\n  };\n\n  const createMobilcards = () => {\n    return (\n      <div className=\"\">\n        {options.map(({ title, url, icon }, index) => (\n          <Segment onClick={() => onCardClick(url)} key={index} size=\"large\">\n            <Image className=\"float-end\" src={icon} size=\"mini\" avatar />\n            <span style={{ fontSize: \"1.3em\" }}>\n              {index + 1}. &nbsp;\n              {title}\n            </span>\n          </Segment>\n        ))}\n      </div>\n    );\n  };\n  return (\n    <div className=\"conatiner\">\n      <div className=\"text-center mt-4 col-lg-7 mx-auto\">\n        <h1 className=\"display-6\">Welcome to Dashboard</h1>\n        <Divider />\n      </div>\n      {/* <div className=\"d-none d-sm-block\"> */}\n      <div className=\"container\">\n        <div className=\"mt-4 row\">{createOptions()}</div>\n      </div>\n\n      {/* <div className=\"mt-4 d-block d-sm-none\">{createMobilcards()}</div> */}\n    </div>\n  );\n};\n\nexport { DashboardOptions };\n","import { axios } from \"./axios\";\n\nconst getAllDrives = () => {\n  return axios.get(\"/api/drives\").then(({ data }) => data && data.drives);\n};\n\nconst deleteDrive = (slug) => {\n  return axios.delete(`/api/drives/${slug}`);\n};\n\nconst saveDrive = (data) => {\n  return axios.post(`/api/drives`, data);\n};\n\nexport { getAllDrives, deleteDrive, saveDrive };\n","import { Modal } from \"react-bootstrap\";\nimport { Button } from \"semantic-ui-react\";\nconst ConfirmationDialog = ({\n  show,\n  title,\n  positiveAction,\n  positiveActionHandler,\n  negativeAction,\n  negativeActionHandler,\n  children,\n}) => {\n  return (\n    <div>\n      <Modal show={show}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer>\n          <Button className=\"m-3\" color=\"red\" onClick={positiveActionHandler}>\n            {positiveAction || \"Ok\"}\n          </Button>\n          <Button className=\"m-3\" color=\"green\" onClick={negativeActionHandler}>\n            {negativeAction || \"Cancel\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { ConfirmationDialog };\n","import { axios } from \"./axios\";\n\nconst getAllGroups = () => {\n  return axios\n    .get(\"/api/groups/\")\n    .then((response) => response.data && response.data.groups);\n};\nconst createGroup = (group) => {\n  return axios\n    .post(\"/api/groups/\", group)\n    .then((response) => response.data && response.data.group);\n};\nconst getGroupById = (id) => {};\nconst deleteGroup = (id) => {\n  return axios.delete(`/api/groups/${id}`);\n};\n\nexport { getAllGroups, createGroup, deleteGroup, getGroupById };\n","const getIn2Digit = (number) => {\n  if (number < 10) return `0${number}`;\n  return number;\n};\n\nconst formatTodayDateInYYYYMMDD = () => {\n  const now = new Date();\n  return formatDateInYYYYMMDD(now);\n};\nconst formatDateInYYYYMMDD = (date) => {\n  date = new Date(date);\n\n  if (!date.getTime()) return null;\n\n  const year = date.getFullYear();\n  const month = getIn2Digit(date.getMonth() + 1);\n  const _date = getIn2Digit(date.getDate());\n  return `${year}-${month}-${_date}`;\n};\n\nconst formatCurrentTimeInHHMM = () => {\n  const now = new Date();\n  const hh = now.getHours();\n  const mm = now.getMinutes();\n\n  return `${getIn2Digit(hh)}:${getIn2Digit(mm)}`;\n};\n\nconst formatWithAMandPM = (hr, min) => {\n  if ((hr < 0 && min < 0) || !hr || !min) {\n    return null;\n  }\n  const date = new Date(0, 0, 0, hr, min, 0, 0);\n  return date.toLocaleTimeString(\"en-us\", {\n    hour12: true,\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\nexport {\n  formatTodayDateInYYYYMMDD,\n  formatCurrentTimeInHHMM,\n  formatWithAMandPM,\n  formatDateInYYYYMMDD,\n};\n","import {\n  formatTodayDateInYYYYMMDD,\n  formatCurrentTimeInHHMM,\n  formatWithAMandPM,\n} from \"./format\";\n\nconst appendQueryString = (url = \"\", object) => {\n  if (!object) return url;\n\n  const keyValue = [];\n  for (let key in object) keyValue.push([key, object[key]]);\n  const queryString = new URLSearchParams(keyValue).toString();\n  let separator = \"?\";\n\n  if (url.includes(\"?\") || url.includes(\"&\")) separator = \"&\";\n\n  return `${url}${separator}${queryString}`;\n};\n\nexport {\n  formatTodayDateInYYYYMMDD,\n  formatCurrentTimeInHHMM,\n  formatWithAMandPM,\n  appendQueryString,\n};\n","import { appendQueryString } from \"../utils\";\nimport { axios } from \"./axios\";\n\nconst createRobin = (robin) => {\n  return axios.post(\"/api/robins\", robin);\n};\nconst getAllRobins = (filters) => {\n  const url = appendQueryString(\"/api/robins/\", filters);\n  return axios\n    .get(url)\n    .then((response) => response.data && response.data.robins);\n};\n\nconst loginRobin = ({ email, password }) => {\n  console.log({ email, password });\n  return axios.post(\"/api/robins/login\", { email, password });\n};\nconst deleteBulkRobins = (ids) => {\n  console.log(ids);\n  return axios\n    .delete(\"/api/robins/bulk\", { data: { robins: ids } })\n    .then((response) => response.data);\n};\nconst moveBulkRobinsToGroup = (group, ids) => {\n  console.log({ group, ids });\n  return axios\n    .post(\"/api/robins/bulk/move/group/\", { robins: ids, group })\n    .then((response) => response.data);\n};\n\nconst makeRobinsAdmin = (ids) => {\n  return axios\n    .post(\"/api/robins/bulk/change/type/admin\", { robins: ids })\n    .then((response) => response.data);\n};\nconst makeRobinsVolunteer = (ids) => {\n  return axios\n    .post(\"/api/robins/bulk/change/type/volunteer\", { robins: ids })\n    .then((response) => response.data);\n};\n\nexport {\n  createRobin,\n  loginRobin,\n  getAllRobins,\n  deleteBulkRobins,\n  makeRobinsAdmin,\n  makeRobinsVolunteer,\n  moveBulkRobinsToGroup,\n};\n","const GreenButton = (props) => {\n  const { REACT_APP_BRAND_COLOR } = process.env;\n  const buttonStyle = {\n    backgroundColor: REACT_APP_BRAND_COLOR,\n    color: \"white\",\n  };\n  return (\n    <button className=\"ui button\" style={buttonStyle} {...props}>\n      {props.children}\n    </button>\n  );\n};\n\nexport { GreenButton };\n","import { Modal } from \"react-bootstrap\";\nimport { GreenButton } from \"../GreenButton\";\nconst MessageDialog = ({ show, button, title, children, onOk, isError }) => {\n  return (\n    <Modal show={show}>\n      <Modal.Header>\n        <Modal.Title>\n          {title || \"Message\"}{\" \"}\n          {isError && <img height=\"30px\" src=\"/icons/cancel.png\" alt=\"\" />}\n          {!isError && <img height=\"30px\" src=\"/icons/info.png\" alt=\"\" />}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children || \"please add body to Modal.\"}</Modal.Body>\n      <Modal.Footer>\n        <GreenButton onClick={onOk}>{button || \"Ok\"}</GreenButton>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport { MessageDialog };\n","import { Button, Select } from \"semantic-ui-react\";\n\nconst Actions = ({\n  onViewChange,\n  onShowFilterModal,\n  onBulkOptionChange,\n  performBulkAction,\n  bulkOptions,\n}) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-4 mt-2\">\n        <Button.Group>\n          <Button color=\"teal\" onClick={() => onViewChange(\"table\")}>\n            Table\n          </Button>\n          <Button color=\"blue\" onClick={() => onViewChange(\"cards\")}>\n            Cards\n          </Button>\n          <Button color=\"google plus\" onClick={onShowFilterModal}>\n            Show Filters\n          </Button>\n        </Button.Group>\n      </div>\n\n      <div className=\"ml-2 mt-2 col\">\n        <Select\n          onChange={onBulkOptionChange}\n          placeholder=\"Select An Action\"\n          options={bulkOptions}\n        />\n        {\"   \"}\n        <Button onClick={performBulkAction} color=\"green\">\n          Done\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport { Actions };\n","import { Fragment } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { GreenButton } from \"../../GreenButton\";\n\nconst RobinFilterModal = ({ show, onHide }) => {\n  return (\n    <Fragment>\n      <Modal show={show}>\n        <Modal.Header>\n          <Modal.Title>Pending Work ⌛️</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Inventore\n            tempora, repellendus autem dolore, expedita id hic perspiciatis\n            architecto odio, sequi et consequatur cumque natus alias. Similique\n            ut illo natus veritatis.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <GreenButton onClick={onHide}>Filter</GreenButton>\n        </Modal.Footer>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport { RobinFilterModal };\n","import { Fragment, useContext } from \"react\";\nimport { toTitleCase } from \"titlecase\";\nimport { Checkbox, Segment } from \"semantic-ui-react\";\nimport { AllRobinContext } from \"./AllRobins\";\n\nconst RobinCards = ({ onClick, onSelect }) => {\n  const robins = useContext(AllRobinContext);\n  return (\n    <Fragment>\n      <div className=\"row\">\n        {robins.map(\n          (\n            {\n              selected,\n              robin: { email, _id, firstName, lastName, phone, createdAt },\n            },\n            index\n          ) => (\n            <div\n              onClick={() => onClick(robins[index])}\n              className=\"col-lg-3 col-md-4 col-sm-5 col-11 mx-auto mt-3\"\n              key={_id}\n            >\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div>\n                    <div className=\"float-end\" onClick={() => onSelect(index)}>\n                      <Segment compact>\n                        <Checkbox className=\"mr-4\" checked={selected} />\n                      </Segment>\n                    </div>\n                  </div>\n                  <div className=\"\">\n                    <h5 className=\"card-title\">\n                      {toTitleCase(firstName)} {toTitleCase(lastName)}\n                    </h5>\n                  </div>\n                  <p className=\"card-text\">\n                    <span>{toTitleCase(email)}</span>\n                    <br />\n                    <span>{toTitleCase(phone)}</span>\n                    <br />\n                    <span>{new Date(createdAt).toDateString()}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport { RobinCards };\n","import { Fragment, useContext } from \"react\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { AllRobinContext } from \"./AllRobins\";\n\nconst RobinTable = (props) => {\n  const robins = useContext(AllRobinContext);\n\n  const { onClick, onSelect } = props;\n\n  const handleClick = (event, index) => {\n    event.stopPropagation();\n    onClick(robins[index]);\n  };\n  // const handleDelete = (event, index) => {\n  //   event.stopPropagation();\n  // };\n\n  const headers = \", Sno.,Name, Email , Phone, Type , Group , Created At\"\n    .split(\",\")\n    .map((item) => item.trim())\n    .map((header, index) => <th key={index}>{header}</th>);\n\n  let rows = robins.map(\n    (\n      {\n        selected,\n        robin: {\n          id,\n          firstName,\n          type,\n          lastName,\n          email,\n          group,\n          phone,\n          createdAt,\n        },\n      },\n      index\n    ) => (\n      <Fragment key={index}>\n        <td onClick={() => onSelect(index)}>\n          <Checkbox checked={selected} />\n        </td>\n        <td onClick={(event) => handleClick(event, index)}>{index + 1}</td>\n        <td\n          onClick={(event) => handleClick(event, index)}\n        >{`${firstName} ${lastName}`}</td>\n        <td onClick={(event) => handleClick(event, index)}>{email}</td>\n        <td onClick={(event) => handleClick(event, index)}>{phone}</td>\n        <td onClick={(event) => handleClick(event, index)}>{type}</td>\n        <td onClick={(event) => handleClick(event, index)}>\n          {group ? group.title : \"No-Group\"}\n        </td>\n        <td onClick={(event) => handleClick(event, index)}>\n          {new Date(createdAt).toDateString()}\n        </td>\n      </Fragment>\n    )\n  );\n\n  rows = rows.map((row, index) => <tr key={index}>{row}</tr>);\n\n  return (\n    <div className=\"table-responsive\">\n      <table\n        style={{ cursor: \"pointer\" }}\n        className=\"table table-hover table-striped table-bordered\"\n      >\n        <thead>\n          <tr>{headers}</tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport { RobinTable };\n","import { RobinCards } from \"./RobinCards\";\nimport { RobinTable } from \"./RobinTable\";\n\nconst ViewSwitcher = ({ view, onSelect, onClick }) => {\n  const views = {\n    table: <RobinTable onSelect={onSelect} onClick={onClick}></RobinTable>,\n    cards: <RobinCards onSelect={onSelect} onClick={onClick}></RobinCards>,\n  };\n\n  return views[view];\n};\n\nexport { ViewSwitcher };\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Divider } from \"semantic-ui-react\";\nimport { getAllGroups } from \"../../../../services/group-service\";\nimport {\n  deleteBulkRobins,\n  getAllRobins,\n  makeRobinsAdmin,\n  makeRobinsVolunteer,\n  moveBulkRobinsToGroup,\n} from \"../../../../services/robin-service\";\nimport { ConfirmationDialog } from \"../../common/ConfirmationDialog\";\nimport { MessageDialog } from \"../../common/MessageDialog\";\nimport { Actions } from \"./Actions\";\nimport { RobinFilterModal } from \"./RobinFilterModal\";\nimport { ViewSwitcher } from \"./ViewSwitcher\";\nconst AllRobinContext = React.createContext();\nconst AllRobins = () => {\n  const [robins, setRobins] = useState([]);\n  const [view, setViews] = useState(\"table\");\n  const [groups, setGroups] = useState([]);\n  const [selectedRobins, setSelectedRobins] = useState([]);\n  const [filterModal, setFilterModal] = useState({ show: false });\n  const [alert, setAlert] = useState({\n    body: \"Done\",\n    show: false,\n    title: \"Message\",\n  });\n  const [confirm, setConfirm] = useState({\n    show: false,\n    title: \"Deleting Robin\",\n    positiveAction: \"Delete\",\n    negativeActionHandler: () => setConfirm({ ...confirm, show: false }),\n  });\n  const [actionChangeData, setActionChangeData] = useState({\n    event: {},\n    data: {},\n  });\n\n  // [{key , value, text}]\n  const [bulkOptions, setBulkOptions] = useState(\n    [\n      { value: \"\", text: \"Select An Option\" },\n      { value: \"select-all\", text: \"Select All\" },\n      { value: \"unselect-all\", text: \"Unselected All\" },\n      { value: \"make-selected-admin\", text: \"Make Selected Admin\" },\n      { value: \"make-selected-volunteer\", text: \"Make Selected Volunteer\" },\n      { value: \"delete-selected\", text: \"Delete\" },\n    ].map((option, index) => ({ ...option, key: index }))\n  );\n\n  useEffect(() => {\n    getAllRobins().then((robins) => {\n      robins = robins.map((robin) => ({\n        selected: false,\n        robin,\n      }));\n      setRobins(robins);\n      console.log(robins);\n    });\n  }, []);\n  useEffect(() => {\n    getAllGroups().then((groups) => {\n      console.log(groups);\n      setGroups(groups);\n      const groupactions = groups.map((group, index) => ({\n        key: group._id + index,\n        text: `Move To ${group.title}`,\n        value: `move-to-group-${group._id}`,\n      }));\n\n      setBulkOptions([...bulkOptions, ...groupactions]);\n    });\n  }, []);\n\n  const handleClick = (robin) => {\n    console.log(robin);\n  };\n\n  const selectRobin = (index) => {\n    console.log(\"Robin Selected\", index);\n    const updated = [...robins];\n    const selectedRobin = updated[index];\n\n    selectedRobin.selected = !selectedRobin.selected;\n\n    setRobins(updated);\n\n    const selectedRobinsCopy = [...selectedRobins];\n    if (selectedRobin.selected) {\n      setSelectedRobins([...selectedRobinsCopy, selectedRobin.robin]);\n    } else {\n      const index = selectedRobins.findIndex(\n        (r) => r._id === selectedRobin.robin._id\n      );\n      selectedRobinsCopy.splice(index, 1);\n      setSelectedRobins([...selectedRobinsCopy]);\n    }\n  };\n\n  const onBulkOptionChange = (event, data) => {\n    console.log({ event, data });\n    setActionChangeData({ event, data });\n  };\n\n  function changeSelectionOfAll(select = true) {\n    const rbs = robins.map((r) => ({ ...r, selected: select }));\n    setRobins(rbs);\n    setSelectedRobins(select ? [...rbs.map((rbs) => rbs.robin)] : []);\n  }\n\n  function deleteSelectedRobins() {\n    const ids = selectedRobins.map((robin) => robin._id);\n    deleteBulkRobins(ids).then((data) => {\n      setSelectedRobins([]);\n      const copy = [...robins];\n      ids.forEach((id) => {\n        const index = copy.findIndex((obj) => obj.robin._id === id);\n        copy.splice(index, 1);\n      });\n\n      setRobins([...copy]);\n\n      setConfirm({ ...confirm, show: false });\n\n      setAlert({\n        ...alert,\n        show: true,\n        body: `${ids.length} Robins Deleted.`,\n        title: \"Deletion Success\",\n      });\n    });\n  }\n\n  const showConfirmDialogForDeletion = () => {\n    setConfirm({\n      ...confirm,\n      show: true,\n      title: \"Bulk Delete\",\n      body: (\n        <div>\n          <p>Do you really want to delete {selectedRobins.length} Robins.</p>\n          <p color=\"red\">You cant undo after delete!!</p>\n        </div>\n      ),\n      positiveActionHandler: () => {\n        deleteSelectedRobins();\n      },\n    });\n  };\n\n  const showErrorMessage = (message) => {\n    setAlert({\n      ...alert,\n      show: true,\n      isError: true,\n      body: `Something Went Wrong !`,\n      title: \"Operation Failed.\",\n    });\n  };\n\n  const makeSelectedAdmin = () => {\n    const ids = selectedRobins.map((robin) => robin._id);\n    const copy = [...robins];\n    makeRobinsAdmin(ids).then((data) => {\n      copy.forEach(({ robin }) => {\n        if (ids.includes(robin._id)) {\n          robin.type = \"ADMIN\";\n        }\n      });\n      setRobins(copy);\n      setAlert({\n        ...alert,\n        show: true,\n        isError: false,\n        body: `${ids.length} Are changed to Admin.`,\n        title: \"Operation Success\",\n      });\n    });\n  };\n  const makeSelectedVolunteer = () => {\n    const ids = selectedRobins.map((robin) => robin._id);\n    const copy = [...robins];\n    makeRobinsVolunteer(ids).then((data) => {\n      copy.forEach(({ robin }) => {\n        if (ids.includes(robin._id)) {\n          robin.type = \"VOLUNTEER\";\n        }\n      });\n      setRobins(copy);\n\n      setAlert({\n        ...alert,\n        show: true,\n        isError: false,\n        body: `${ids.length} Are changed to Volunteer.`,\n        title: \"Operation Success\",\n      });\n    });\n  };\n\n  const moveToGroup = (group) => {\n    console.log(\"Moving \", robins.length, \"Robins to \", group);\n    const ids = selectedRobins.map((robin) => robin._id);\n    moveBulkRobinsToGroup(group._id, ids).then((data) => {\n      const copy = [...robins];\n\n      console.log(ids);\n      copy.forEach(({ robin }) => {\n        if (ids.includes(robin._id)) {\n          console.log(\"found..\");\n          robin.group = group;\n        }\n      });\n\n      setRobins(copy);\n    });\n  };\n\n  const performBulkAction = () => {\n    const { event, data } = actionChangeData;\n\n    const actions = {\n      \"select-all\": () => changeSelectionOfAll(true),\n      \"unselect-all\": () => changeSelectionOfAll(false),\n      \"delete-selected\": showConfirmDialogForDeletion,\n      \"make-selected-admin\": makeSelectedAdmin,\n      \"make-selected-volunteer\": makeSelectedVolunteer,\n      ...groups.reduce((reduced, group) => {\n        reduced[`move-to-group-${group._id}`] = () => moveToGroup(group);\n        return reduced;\n      }, {}),\n    };\n\n    if (!data) return;\n\n    if (actions[data.value]) {\n      actions[data.value]();\n    }\n\n    console.log(\n      \"Performing \",\n      data.value,\n      \"On \",\n      selectedRobins.length,\n      \"Robins\"\n    );\n  };\n\n  const hideFilterModel = () => {\n    setFilterModal({ ...filterModal, show: false });\n  };\n\n  const showFilterModal = () => {\n    setFilterModal({ ...filterModal, show: true });\n    console.log(\"Hide Filter\");\n  };\n  return (\n    <AllRobinContext.Provider value={robins}>\n      <Fragment>\n        <RobinFilterModal\n          {...filterModal}\n          onHide={hideFilterModel}\n        ></RobinFilterModal>\n        <ConfirmationDialog {...confirm}>{confirm.body}</ConfirmationDialog>\n        <MessageDialog\n          {...alert}\n          onOk={() => setAlert({ ...alert, show: false })}\n        >\n          {alert.body}\n        </MessageDialog>\n\n        <div className=\"container-fluid\">\n          <div className=\"mt-3 mx-auto\">\n            <div>\n              <h1 className=\"display-5\">All Robins</h1>\n            </div>\n            <Divider></Divider>\n            <Actions\n              {...{\n                onBulkOptionChange,\n                bulkOptions,\n                onViewChange: setViews,\n                performBulkAction,\n                onShowFilterModal: showFilterModal,\n              }}\n            ></Actions>\n          </div>\n\n          <div className=\"mt-4\">\n            <ViewSwitcher\n              {...{\n                onClick: handleClick,\n                onSelect: selectRobin,\n                view: view,\n              }}\n            ></ViewSwitcher>\n          </div>\n        </div>\n      </Fragment>\n    </AllRobinContext.Provider>\n  );\n};\n\nexport { AllRobins, AllRobinContext };\n","import { Fragment, useEffect, useState } from \"react\";\nimport { getAllGroups } from \"../../../../services/group-service\";\nimport { Button, Icon } from \"semantic-ui-react\";\nconst AllGroups = ({ onDelete, groups }) => {\n  return (\n    <Fragment>\n      <div className=\"container mt-3\">\n        <table className=\"table table-striped table-hover\">\n          <thead className=\"table-light\">\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Slug</th>\n              <th>Created At</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {groups.map((group, index) => (\n              <tr key={group._id}>\n                <td>{index + 1}</td>\n                <td>{group.title}</td>\n                <td>{group.slug}</td>\n                <td>{new Date(group.createdAt).toDateString()}</td>\n                <td>\n                  <Icon\n                    color=\"red\"\n                    onClick={() => onDelete(group)}\n                    name=\"trash\"\n                    className=\"hand\"\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport { AllGroups };\n","import { Fragment, useState } from \"react\";\nimport { Divider, Form } from \"semantic-ui-react\";\nimport { createGroup } from \"../../../../services/group-service\";\nimport { GreenButton } from \"../../GreenButton\";\n\nconst GroupForm = () => {\n  const [group, setGroup] = useState({ title: \"\" });\n  const handleFormSubmit = () => {\n    createGroup(group).then((group) => {\n      alert(\"Group Created.\");\n      setGroup({ title: \"\" });\n    });\n  };\n\n  const onInputChange = (event) => {\n    console.log(\"group\");\n    setGroup({\n      [event.target.name]: event.target.value,\n    });\n  };\n  return (\n    <Fragment>\n      <div className=\"container mt-3\">\n        <div className=\"conatiner p-4\">\n          <div className=\"mt-4\">\n            <div>\n              <div className=\"\">\n                <div>\n                  <p className=\"display-6\">Add New Group</p>\n                  <Divider></Divider>\n                </div>\n                <Form onSubmit={handleFormSubmit}>\n                  <Form.Field>\n                    <label>Group Name</label>\n                    <input\n                      required\n                      placeholder=\"Name\"\n                      onChange={onInputChange}\n                      value={group.title}\n                      name=\"title\"\n                    />\n                  </Form.Field>\n                  <br />\n                  <GreenButton type=\"submit\">Save group</GreenButton>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport { GroupForm };\n","import { appendQueryString } from \"../utils\";\nimport { axios } from \"./axios\";\n\nconst createEvent = (event) => {\n  return axios\n    .post(\"/api/events/\", { ...event })\n    .then((response) => response.data && response.data.event);\n};\nconst getAllEvents = (query) => {\n  const url = appendQueryString(\"/api/events/\", query);\n  return axios\n    .get(url)\n    .then((response) => response.data && response.data.events);\n};\n\nconst getUpcomingEvents = () => {\n  return axios\n    .get(\"/api/events/upcoming/\")\n    .then((response) => response.data && response.data.events);\n};\nconst getDoneEvents = () => {\n  return axios\n    .get(\"/api/events/done/\")\n    .then((response) => response.data && response.data.events);\n};\n\nexport { createEvent, getUpcomingEvents, getDoneEvents, getAllEvents };\n","import { Table, Checkbox, Message } from \"semantic-ui-react\";\nimport toTitleCase from \"titlecase\";\n\nconst AttendanceMarker = ({\n  robins,\n  drives,\n  onMarkAttendance,\n  attendances,\n}) => {\n  const isPresent = (drive, robin) => {\n    if (!attendances) return false;\n    const attendanceOfRobin = attendances.find((at) => at.robin === robin._id);\n    let result = false;\n\n    if (attendanceOfRobin) {\n      result = attendanceOfRobin[drive._id];\n    }\n\n    return !!result;\n  };\n\n  if (robins.length < 1) {\n    return (\n      <Message info>\n        <h1 className=\"text-center\">No Robins In Selected Group</h1>\n      </Message>\n    );\n  }\n\n  return (\n    <div className=\"border rounded\">\n      <Table celled padded>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>#</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Email</Table.HeaderCell>\n            <Table.HeaderCell>Phone</Table.HeaderCell>\n            <Table.HeaderCell>Group</Table.HeaderCell>\n            {drives.map((drive) => (\n              <Table.HeaderCell key={drive._id}>{drive.drive}</Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {robins.map((robin, index) => (\n            <Table.Row key={robin._id}>\n              <Table.Cell>{index + 1}</Table.Cell>\n              <Table.Cell>\n                {toTitleCase(`${robin.firstName} ${robin.lastName}`)}\n              </Table.Cell>\n              <Table.Cell>{robin.email}</Table.Cell>\n              <Table.Cell>{robin.phone}</Table.Cell>\n              <Table.Cell>\n                {toTitleCase(\n                  robin.group ? `${robin?.group?.title}` : \"No-group\"\n                )}\n              </Table.Cell>\n              {drives.map((drive) => (\n                <Table.Cell key={drive._id}>\n                  <Checkbox\n                    checked={isPresent(drive, robin)}\n                    onChange={(event, data) =>\n                      onMarkAttendance({ event, data, drive, robin, index })\n                    }\n                    toggle\n                  />\n                </Table.Cell>\n              ))}\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport { AttendanceMarker };\n","import { useState } from \"react\";\nimport { Form, Select } from \"semantic-ui-react\";\nimport { GreenButton } from \"../../GreenButton\";\n\nconst AttendanceRobinFilters = ({\n  groups,\n  onGroupSelect,\n  onShowEventSelector,\n}) => {\n  const options = [\n    { key: -1, text: \"Select Group\", value: \"-1\", selected: true },\n    ...groups.map((group, index) => ({\n      key: index,\n      text: group.title,\n      value: group._id,\n    })),\n  ];\n\n  const [selectedGroup, setSelectedGroup] = useState(\"-1\");\n\n  const handleOnChange = (event, { value }) => {\n    setSelectedGroup(value);\n    onGroupSelect(event, { value });\n  };\n\n  return (\n    <div className=\"border rounded p-2\">\n      <div class=\"d-flex flex-wrap\">\n        <div class=\"mx-3\">\n          <div className=\"\">\n            <div className=\"mt-4 mb-4\">\n              <GreenButton onClick={onShowEventSelector}>\n                Select Event\n              </GreenButton>\n            </div>\n          </div>\n        </div>\n        <div class=\"mx-3\">\n          <Form className=\"col\">\n            <Form.Field>\n              <label>Select Group</label>\n              <Select\n                onChange={handleOnChange}\n                name={\"select\"}\n                options={options}\n                value={selectedGroup}\n              ></Select>\n            </Form.Field>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { AttendanceRobinFilters };\n","import { List, Image, Form, Message } from \"semantic-ui-react\";\nimport { Modal } from \"react-bootstrap\";\nimport { GreenButton } from \"../../GreenButton\";\nimport {\n  formatTodayDateInYYYYMMDD,\n  formatWithAMandPM,\n} from \"../../../../utils\";\nimport toTitleCase from \"titlecase\";\nimport { useState } from \"react\";\n\nconst EventSelector = ({\n  events,\n  onSelect,\n  show,\n  onClose,\n  selectedEvent,\n  onEventFilterChange,\n}) => {\n  const [selectedDate, setSelectedDate] = useState(\n    formatTodayDateInYYYYMMDD(new Date())\n  );\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  function onDateChange({ target: { name, value } }) {\n    const date = new Date(value);\n    if (isNaN(date.getTime())) {\n      setErrorMessage(\"Invalid Date\");\n      return;\n    }\n\n    setSelectedDate(value);\n    setErrorMessage(\"\");\n\n    onEventFilterChange({ date: value });\n  }\n\n  function renderList() {\n    if (!events.length) {\n      return (\n        <Message warning>\n          <h3>No Events Scheduled On {selectedDate}</h3>\n        </Message>\n      );\n    }\n    return (\n      <List celled>\n        {events.map((event, index) => (\n          <List.Item\n            key={index}\n            className=\"hand\"\n            style={{\n              backgroundColor: selectedEvent === event ? \"#f0eee9\" : \"\",\n            }}\n            onClick={() => onSelect(event)}\n          >\n            <Image avatar src=\"/icons/event.png\" />\n            <List.Content>\n              <List.Header>\n                {new Date(event.date).toDateString()}\n                {` `}\n                {formatWithAMandPM(event.time.hr, event.time.min)}\n              </List.Header>\n              {toTitleCase(event.title)}\n              <br></br>\n              {toTitleCase(event.location)}\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    );\n  }\n\n  return (\n    <Modal show={show}>\n      <Modal.Header>\n        <Modal.Title>\n          <h2>Select An Event</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {errorMessage ? (\n          <Message error>{errorMessage}</Message>\n        ) : (\n          <Message info>\n            Showing Events Of {new Date(selectedDate).toLocaleDateString()}{\" \"}\n          </Message>\n        )}\n        <Form>\n          <Form.Field>\n            <label>Select Date</label>\n            <input onChange={onDateChange} value={selectedDate} type=\"date\" />\n          </Form.Field>\n        </Form>\n        {renderList()}\n      </Modal.Body>\n      <Modal.Footer>\n        <GreenButton onClick={onClose}>Close</GreenButton>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport { EventSelector };\n","import { useEffect, useRef } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport { usePrevious };\n","import { axios } from \"./axios\";\n\nconst getAllGroups = () => {\n  return axios\n    .get(\"/api/reports/groups/\")\n    .then((response) => response.data && response.data.groups);\n};\nconst getAllRobins = () => {\n  return axios\n    .get(\"/api/reports/robins\")\n    .then((response) => response.data && response.data.robins);\n};\nconst getAllEvents = () => {\n  return axios\n    .get(\"/api/reports/events/\")\n    .then((response) => response.data && response.data.events);\n};\nconst getAllDrives = () => {\n  return axios\n    .get(\"/api/reports/drives\")\n    .then((response) => response.data && response.data.drives);\n};\n\nconst getAttendanceReport = (query) => {\n  const url = `/api/reports/attendance?${new URLSearchParams(\n    query\n  ).toString()}`;\n  return axios\n    .get(url)\n    .then((response) =>\n      response && response.data ? response.data.report : []\n    );\n};\n\nexport {\n  getAllGroups,\n  getAllRobins,\n  getAllEvents,\n  getAllDrives,\n  getAttendanceReport,\n};\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { AppContext } from \"../../App\";\nimport { getAllDrives } from \"../../services/drive-service\";\nimport { getAllRobins } from \"../../services/robin-service\";\nimport { reportsPageTab } from \"./config\";\nconst ReportContext = React.createContext();\nfunction Reports() {\n  const [robins, setRobins] = useState([]);\n  const { drives } = useContext(AppContext);\n\n  useEffect(() => {\n    getAllRobins().then((robins) => {\n      console.log({ robins });\n      setRobins(robins || []);\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <ReportContext.Provider value={{ drives, robins }}>\n        <div className=\"mt-3\">\n          <Tab panes={reportsPageTab} renderActiveOnly={false} />\n        </div>\n      </ReportContext.Provider>\n    </Fragment>\n  );\n}\n\nexport { Reports, ReportContext };\n","import { useContext, useEffect, useState } from \"react\";\nimport toTitleCase from \"titlecase\";\nimport { formatDateInYYYYMMDD, formatWithAMandPM } from \"../../../utils/format\";\nimport { ReportContext } from \"../../pages/Reports\";\n\nconst AttendanceReportTable = (props) => {\n  const { report } = props;\n  const { drives, robins } = useContext(ReportContext);\n  const [values, setValues] = useState([]);\n  const [headers, setHeaders] = useState(\n    \"Sno.,Event,Robin\".split(\",\").map((header) => header.trim())\n  );\n\n  const isPresent = (report, robin, drive) => {\n    return report.attendanceInfo\n      ? report.attendanceInfo.find((info) => info.drive._id == drive._id)\n          ?.isPresent\n      : false;\n  };\n\n  useEffect(() => {\n    setHeaders([...headers, ...drives.map((drive) => drive.drive)]);\n  }, [drives]);\n\n  useEffect(() => {\n    if (report) {\n      const valuesArray = report.map((report, index) => {\n        const { event, robin } = report;\n        const { firstName, lastName } = robin;\n        const { date, time, location } = event || {};\n        const { hr, min } = time || {};\n\n        const transformedToArray = [\n          index + 1,\n          <div>\n            <p className=\"m-0\">\n              <span className=\"p-2\">📅</span>{\" \"}\n              {formatDateInYYYYMMDD(date) || \"-\"}\n            </p>\n            <p className=\"m-0\">\n              <span className=\"p-2\">🕒</span>{\" \"}\n              {formatWithAMandPM(hr, min) || \"-\"}\n            </p>\n            <p className=\"m-0\">\n              <span className=\"p-2\">📍</span> {toTitleCase(location)}\n            </p>\n          </div>,\n          `${firstName || \"-\"} ${lastName || \"\"}`,\n        ];\n\n        drives.forEach((drive) => {\n          // check is present or not\n          transformedToArray.push(\n            isPresent(report, robin, drive) ? (\n              <p className=\"text-center\">✅</p>\n            ) : (\n              <p className=\"text-center\">❌</p>\n            )\n          );\n        });\n\n        return transformedToArray;\n      });\n      setValues(valuesArray);\n    }\n  }, [report]);\n\n  return (\n    <section id=\"table\" className=\"mt-3\">\n      <div className=\"table-responsive\">\n        <table\n          style={{ verticalAlign: \"middle\" }}\n          className=\"table table-hover table-bordered table-striped table-light\"\n        >\n          <thead>\n            <tr>\n              {headers.map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {values.map((value, index) => (\n              <tr key={index}>\n                {value.map((v, innerIndex) => (\n                  <td key={index + \"\" + innerIndex}>{v}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n};\n\nexport { AttendanceReportTable };\n","import { sub } from \"date-fns\";\nimport { isEmpty, isEqual } from \"lodash\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { AppContext } from \"../../../App\";\nimport { usePrevious } from \"../../../hooks\";\nimport { getAllEvents } from \"../../../services/event-service\";\nimport { getAttendanceReport } from \"../../../services/report-service\";\nimport { formatDateInYYYYMMDD, formatWithAMandPM } from \"../../../utils/format\";\nimport { ReportContext } from \"../../pages/Reports\";\nimport { AttendanceReportTable } from \"./AttendanceReportTable\";\n\nfunction AttendanceReport() {\n  const selectedEventInitialValue = { _id: \"\" };\n  const selectedRobinInitialValue = { _id: \"\" };\n  const { drives } = useContext(AppContext);\n  const { robins } = useContext(ReportContext);\n  const [events, setEvents] = useState([]);\n  const [report, setReport] = useState([]);\n  const [transformedReport, setTransformedReport] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(selectedEventInitialValue);\n  const [selectedRobin, setSelectedRobin] = useState(selectedRobinInitialValue);\n  const [filter, setFilter] = useState({\n    date: formatDateInYYYYMMDD(sub(new Date(), { days: 4 })),\n  });\n  const [robinEventFilter, setRobinEventFilter] = useState({});\n  const prevFilter = usePrevious(filter);\n  const prevRobinEvent = usePrevious(robinEventFilter);\n\n  useEffect(() => {\n    if (isEqual(prevFilter, filter)) return;\n    getAllEvents(filter).then((events) => {\n      console.log({ events });\n      setEvents(events);\n    });\n  }, [filter]);\n\n  useEffect(() => {\n    console.log(\"Report Changed..\");\n    const transformed = report\n      .map((item) => ({\n        ...item,\n        event: isEqual(selectedEvent, selectedEventInitialValue)\n          ? item.event\n          : selectedEvent,\n      }))\n      .sort(\n        ({ event: x }, { event: y }) =>\n          new Date(y.date).getTime() - new Date(x.date).getTime()\n      );\n    setTransformedReport(transformed);\n    console.log({ transformed });\n  }, [report]);\n\n  useEffect(() => {\n    if (isEqual(prevRobinEvent, robinEventFilter)) return;\n    if (isEmpty(robinEventFilter)) return;\n\n    console.log(\"USE EFFECT ROBIN EVENT\");\n    getAttendanceReport(robinEventFilter).then((report) => {\n      setReport(report);\n    });\n  }, [robinEventFilter]);\n\n  const onInputChange = (event) => {\n    const { name, value } = event.target;\n    console.log({ name, value });\n    const newFilter = { ...filter, [name]: value };\n    setFilter(newFilter);\n  };\n\n  const handleEventChange = ({ target: { name, value } }) => {\n    if (value) {\n      const selectedEvent = events.find((event) => event._id === value);\n      setSelectedEvent(selectedEvent);\n    } else {\n      setSelectedEvent({ _id: \"\" });\n    }\n\n    setRobinEventFilter({ ...robinEventFilter, event: value });\n  };\n  const handleRobinChange = ({ target: { name, value } }) => {\n    if (value) {\n      const selectedRobin = robins.find((robin) => robin._id === value);\n      setSelectedRobin(selectedRobin);\n    } else {\n      setSelectedRobin({ _id: \"\" });\n    }\n    setRobinEventFilter({ ...robinEventFilter, robin: value });\n  };\n\n  const formatDateAndTimeForOption = (event) => {\n    return `${new Date(event.date).toDateString()} ${formatWithAMandPM(\n      event.time.hr,\n      event.time.min\n    )}`;\n  };\n\n  return (\n    <section>\n      <h1>Attendance Report </h1>\n      <Form className=\"row\">\n        <div className=\"mt-3 col\">\n          <Form.Field>\n            <label>Select Date</label>\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={filter.date}\n              onChange={onInputChange}\n            />\n          </Form.Field>\n        </div>\n        <div className=\"mt-3 col\">\n          <Form.Field>\n            <label>Select Robin</label>\n            <select\n              value={selectedRobin._id}\n              onChange={handleRobinChange}\n              name=\"robin\"\n              id=\"robin\"\n            >\n              <option value=\"\">Select Robin</option>\n              {robins.map(({ _id, firstName, lastName }) => (\n                <option key={_id} value={_id}>\n                  {`${firstName} ${lastName}`}\n                </option>\n              ))}\n            </select>\n          </Form.Field>\n        </div>\n        <div className=\"mt-3 col\">\n          <Form.Field>\n            <label>Select Date</label>\n            <select\n              value={selectedEvent._id}\n              onChange={handleEventChange}\n              name=\"event\"\n              id=\"event\"\n            >\n              <option value=\"\">Select Event</option>\n              {events.map((event) => (\n                <option key={event._id} value={event._id}>\n                  {formatDateAndTimeForOption(event)}\n                </option>\n              ))}\n            </select>\n          </Form.Field>\n        </div>\n      </Form>\n      {!selectedEvent._id && !selectedRobin._id && (\n        <Message color=\"blue\">\n          <h4>Select Robin or Event !</h4>\n        </Message>\n      )}\n      <AttendanceReportTable {...{ report: transformedReport }} />\n    </section>\n  );\n}\n\nexport { AttendanceReport };\n","function DriveReport() {\n  return (\n    <section>\n      <h1>Drive Report </h1>\n    </section>\n  );\n}\n\nexport { DriveReport };\n","import { useContext } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { toTitleCase } from \"titlecase\";\nimport { formatWithAMandPM } from \"../../../utils/format\";\nimport { ScheduleDriveContext } from \"../../pages/ScheduleDrive\";\n\nconst EventTable = ({ events }) => {\n  const { handleEventWhatsAppShare } = useContext(ScheduleDriveContext);\n\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Time</th>\n            <th scope=\"col\">Created By</th>\n            {/* <th scope=\"col\">Title</th> */}\n            {/* <th scope=\"col\">Description</th> */}\n            <th scope=\"col\">Locations</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {events.map((event, index) => (\n            <tr key={event._id}>\n              <td>{index + 1}</td>\n              <td>{new Date(event.date).toDateString()}</td>\n              <td>{formatWithAMandPM(event.time.hr, event.time.min)}</td>\n              <td>{toTitleCase(event.createdBy?.firstName)}</td>\n              {/* <td>{toTitleCase(event.title)}</td> */}\n              {/* <td>{toTitleCase(event.description)}</td> */}\n              <td>{toTitleCase(event.location)}</td>\n              <td>\n                <Icon\n                  onClick={() => handleEventWhatsAppShare(event)}\n                  name=\"whatsapp\"\n                  color=\"green\"\n                  size=\"large\"\n                  link\n                ></Icon>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport { EventTable };\n","import { useEffect, useState } from \"react\";\nimport { getDoneEvents } from \"../../../services/event-service\";\nimport { EventTable } from \"./EventTable\";\n\nconst Done = () => {\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    getDoneEvents().then((events) => {\n      setEvents(events);\n    });\n  }, []);\n  return (\n    <div>\n      <EventTable events={events} />\n    </div>\n  );\n};\n\nexport { Done };\n","import { useEffect, useState } from \"react\";\nimport { Form, Divider } from \"semantic-ui-react\";\nimport { createEvent } from \"../../../services/event-service\";\nimport {\n  formatCurrentTimeInHHMM,\n  formatTodayDateInYYYYMMDD,\n} from \"../../../utils/format\";\nimport { GreenButton } from \"../GreenButton\";\n// drive, title, description, date, location, slug, deleted, _id, updatedAt, createdAt, __v, id\nconst Schedule = ({ drives }) => {\n  const initialFormState = {\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    date: formatTodayDateInYYYYMMDD(),\n    time: formatCurrentTimeInHHMM(),\n  };\n\n  const [form, setForm] = useState({ ...initialFormState });\n  const [showMessage, setShowMessage] = useState(false);\n\n  useEffect(() => {\n    if (showMessage) {\n      console.log(\"Message Showing...\");\n      setTimeout(() => setShowMessage(false), 3000);\n    }\n  }, [showMessage]);\n\n  const onInputChange = (event, data) => {\n    const { name, value } = event.target;\n    console.log(name, value, data);\n    if (!data) {\n      setForm({ ...form, [name]: value });\n    } else {\n      const { value, name } = data;\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const scheduleDrive = () => {\n    console.log(form);\n\n    const time = form.time;\n    if (time.split(\":\").length !== 2) {\n      alert(\"Time Invalid\");\n    }\n    const hr = +time.split(\":\")[0];\n    const min = +time.split(\":\")[1];\n    const event = { ...form, time: { hr, min } };\n\n    console.log(event);\n\n    createEvent(event).then((event) => {\n      console.log({ created: event });\n      setForm(initialFormState);\n      setShowMessage(true);\n    });\n  };\n  return (\n    <div className=\"col-lg-6 mx-auto m-4\">\n      <div>\n        <p className=\"display-6 p-0 m-0\">Schedule A Drive</p>\n        <Divider></Divider>\n      </div>\n\n      {showMessage && (\n        <p className=\"alert alert-success border\">Event Scheduled.</p>\n      )}\n\n      <div className=\"mt-4\">\n        <Form className=\"\" onSubmit={scheduleDrive}>\n          <Form.Input\n            onChange={onInputChange}\n            fluid={true}\n            label=\"Title\"\n            placeholder=\"Title Of Event\"\n            name=\"title\"\n            value={form.title}\n          />\n          <Form.TextArea\n            onChange={onInputChange}\n            label=\"Description\"\n            placeholder=\"Description Of Event\"\n            name=\"description\"\n            value={form.description}\n          />\n          <Form.TextArea\n            onChange={onInputChange}\n            label=\"Location\"\n            name=\"location\"\n            required\n            placeholder=\"Location\"\n            value={form.location}\n          />\n\n          <Form.Field>\n            <label>Date</label>\n            <input\n              onChange={onInputChange}\n              type=\"date\"\n              required\n              value={form.date}\n              name=\"date\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Time</label>\n            <input\n              onChange={onInputChange}\n              type=\"time\"\n              required\n              value={form.time}\n              name=\"time\"\n            />\n          </Form.Field>\n\n          <div className=\"mt-4\">\n            <Form.Field onChange={onInputChange}>\n              <GreenButton type=\"submit\"> Schedule Drive</GreenButton>\n            </Form.Field>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport { Schedule };\n","import { useContext, useEffect, useState } from \"react\";\nimport { getUpcomingEvents } from \"../../../services/event-service\";\nimport { ScheduleDriveContext } from \"../../pages/ScheduleDrive\";\nimport { EventTable } from \"./EventTable\";\n\nconst Upcoming = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getUpcomingEvents().then((events) => {\n      setEvents(events);\n    });\n  }, []);\n  return (\n    <div>\n      <EventTable events={events} />\n    </div>\n  );\n};\n\nexport { Upcoming };\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { toTitleCase } from \"titlecase\";\nimport { getAllDrives } from \"../../services/drive-service\";\nimport { formatTodayDateInYYYYMMDD, formatWithAMandPM } from \"../../utils\";\nimport { Done } from \"../ui/schedule-drive/Done\";\nimport { Schedule } from \"../ui/schedule-drive/Schedule\";\nimport { Upcoming } from \"../ui/schedule-drive/Upcoming\";\n\nlet ScheduleDriveContext = React.createContext({});\n\nconst ScheduleDrive = (props) => {\n  const [drives, setDrives] = useState([]);\n  const host = window?.location?.origin;\n\n  useEffect(() => {\n    getAllDrives().then((drives) => {\n      console.log(drives);\n      setDrives([...drives]);\n    });\n  }, []);\n\n  const handleEventWhatsAppShare = (event) => {\n    console.log(\"Sharing On WhatsApp\");\n    console.log({ event });\n    let message = [\n      `A Drive is Scheduled 🙌`,\n      `*📅 Date:* ${new Date(event.date).toDateString()}`,\n      `*⏱️ Time:* ${formatWithAMandPM(event.time.hr, event.time.min)}`,\n      `*📍 Location:* ${event.location}`,\n      `*👤 Scheduled By:* ${event.createdBy.firstName} ${event.createdBy.lastName}`,\n    ]\n      .map((e) => toTitleCase(e))\n      .concat([`For More Visit: ${host}`])\n      .join(\"\\n\");\n\n    const data = { text: message };\n    const text = new URLSearchParams(data).toString();\n    const url = `https://api.whatsapp.com/send?${text}`;\n    window.open(url, \"_black\");\n  };\n\n  const panes = [\n    {\n      menuItem: \"Schedule\",\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Schedule drives={drives} />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: \"Upcoming\",\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Upcoming />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: \"Done\",\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Done />\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  const context = {\n    drives,\n    handleEventWhatsAppShare,\n  };\n\n  return (\n    <div className=\"mt-3 mx-auto\">\n      <ScheduleDriveContext.Provider value={context}>\n        <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n      </ScheduleDriveContext.Provider>\n    </div>\n  );\n};\n\nexport { ScheduleDrive, ScheduleDriveContext };\n","import { TabPane } from \"semantic-ui-react\";\nimport { AllDrives } from \"../ui/dashboard/AllDrives\";\nimport { AllRobins } from \"../ui/dashboard/AllRobins/AllRobins\";\nimport { DriveForm } from \"../ui/dashboard/DriveForm\";\nimport { GroupPage } from \"../ui/dashboard/group/GroupPage\";\nimport { MarkAttendance } from \"../ui/dashboard/MarkAttendancePage\";\nimport { RobinForm } from \"../ui/dashboard/RobinForm\";\nimport { AttendanceReport } from \"../ui/reports/AttendanceReport\";\nimport { DriveReport } from \"../ui/reports/DriveReport\";\nimport { ExportDataPage } from \"./Export\";\nimport { Reports } from \"./Reports\";\nimport { ScheduleDrive } from \"./ScheduleDrive\";\n\nconst dashBoardCardOptions = [\n  {\n    title: \"Schedule Drive\",\n    url: \"/dashboard/schedule-drive\",\n    icon: \"/icons/schedule.png\",\n    Component: ScheduleDrive,\n  },\n  {\n    title: \"Mark Attendence\",\n    url: \"/dashboard/mark-attendence\",\n    icon: \"/icons/attendance.png\",\n    Component: MarkAttendance,\n  },\n  {\n    title: \"Report\",\n    url: \"/dashboard/reports\",\n    icon: \"/icons/report.png\",\n    Component: Reports,\n  },\n  {\n    title: \"Add Robin\",\n    url: \"/dashboard/add-robin\",\n    icon: \"/icons/add-user.png\",\n    Component: RobinForm,\n  },\n  {\n    title: \"All Robins\",\n    url: \"/dashboard/all-robins\",\n    icon: \"/icons/list.png\",\n    Component: AllRobins,\n  },\n  {\n    title: \"Add Drives\",\n    url: \"/dashboard/add-drive\",\n    icon: \"/icons/d.png\",\n    Component: DriveForm,\n  },\n  {\n    title: \"All Drives\",\n    url: \"/dashboard/all-drives\",\n    icon: \"/icons/list.png\",\n    Component: AllDrives,\n  },\n  {\n    title: \"Groups\",\n    url: \"/dashboard/groups\",\n    icon: \"/icons/crowd.png\",\n    Component: GroupPage,\n  },\n  {\n    title: \"Export\",\n    url: \"/dashboard/export\",\n    icon: \"/icons/excel.png\",\n    Component: ExportDataPage,\n  },\n];\n\nconst reportsPageTab = [\n  {\n    menuItem: \"Attendance\",\n    pane: (\n      <TabPane key=\"1\">\n        <AttendanceReport />\n      </TabPane>\n    ),\n  },\n  {\n    menuItem: \"Drives\",\n    pane: (\n      <TabPane key=\"2\">\n        <DriveReport />\n      </TabPane>\n    ),\n  },\n];\nexport { dashBoardCardOptions, reportsPageTab };\n","import { Fragment } from \"react\";\nimport { Message } from \"semantic-ui-react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  getAttendanceOfEvent,\n  markAttendance,\n} from \"../../../services/attendance-service\";\nimport { getAllDrives } from \"../../../services/drive-service\";\nimport { getAllEvents } from \"../../../services/event-service\";\nimport { getAllGroups } from \"../../../services/group-service\";\nimport { getAllRobins } from \"../../../services/robin-service\";\nimport { AttendanceMarker } from \"./attendance/AttendanceMarker\";\nimport { AttendanceRobinFilters } from \"./attendance/AttendanceRobinFilter\";\nimport { EventSelector } from \"./attendance/EventSelector\";\nimport { formatWithAMandPM } from \"../../../utils\";\nimport toTitleCase from \"titlecase\";\nimport id from \"date-fns/esm/locale/id/index.js\";\nimport { isEmpty } from \"lodash\";\n\nconst MarkAttendance = () => {\n  const [drives, setDrives] = useState([]);\n  const [robins, setRobins] = useState([]);\n  const [filteredRobins, setFilteredRobins] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [showEventSelector, setShowEventSelector] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [filters, setFilters] = useState({});\n  const [attendances, setAttendances] = useState([]);\n  const [eventFilters, setEventFilter] = useState({});\n\n  useEffect(() => {\n    if (selectedEvent)\n      getAttendanceOfEvent(selectedEvent._id).then((response) => {\n        setAttendances(response);\n      });\n  }, [selectedEvent]);\n\n  useEffect(() => {\n    console.log({ filters });\n    getAllRobins(filters).then((robins) => {\n      setRobins(robins || []);\n    });\n  }, [filters]);\n\n  useEffect(() => {\n    getAllGroups().then((groups) => {\n      setGroups(groups);\n    });\n\n    getAllDrives().then((drives) => {\n      setDrives(drives);\n    });\n  }, []);\n\n  useEffect(() => {\n    getAllEvents(eventFilters).then((events) => {\n      setEvents(events);\n    });\n  }, [eventFilters]);\n\n  const handleEventSelect = (event) => {\n    setSelectedEvent(event);\n    setShowEventSelector(false);\n  };\n\n  const handleGroupSelect = (event, data) => {\n    const { value } = data;\n    const copy = { ...filters };\n    !value ? delete copy.group : (copy.group = value);\n\n    setFilters(copy);\n  };\n\n  const onEventFilterChange = (filter) => {\n    setEventFilter({ ...eventFilters, ...filter });\n  };\n\n  const handleMarkAttandance = ({ event, data, drive, robin, index }) => {\n    if (!selectedEvent) {\n      alert(\"select an event first \");\n      return;\n    }\n\n    const checked = data.checked;\n    markAttendance({\n      checked,\n      drive: drive._id,\n      robin: robin._id,\n      event: selectedEvent._id,\n    })\n      .then((attendance) => {\n        const attendanceOfRobin = attendances.find(\n          (at) => at.robin === robin._id\n        );\n\n        const attendancesCopy = [...attendances];\n        // update attendnace\n        if (attendanceOfRobin) {\n          attendanceOfRobin[drive._id] = checked;\n        } else {\n          // cerate new\n          attendancesCopy.push({\n            [drive._id]: checked,\n            robin: robin._id,\n            event: selectedEvent._id,\n          });\n        }\n\n        setAttendances(attendancesCopy);\n      })\n      .catch((error) => {\n        console.error(error);\n        return;\n      });\n  };\n\n  const renderEventSelector = () => (\n    <EventSelector\n      selectedEvent={selectedEvent}\n      show={showEventSelector}\n      onSelect={handleEventSelect}\n      events={events}\n      onClose={() => setShowEventSelector(false)}\n      onEventFilterChange={onEventFilterChange}\n    ></EventSelector>\n  );\n\n  const renderAttendanceMarker = () => {\n    return (\n      selectedEvent && (\n        <AttendanceMarker\n          onMarkAttendance={handleMarkAttandance}\n          drives={drives}\n          robins={robins}\n          attendances={attendances}\n        ></AttendanceMarker>\n      )\n    );\n  };\n\n  const renderInfoMessageAfterEventSelect = () => (\n    <Message success size=\"large\">\n      <Message.Header>\n        <p>\n          {toTitleCase(`Marking Attendance Of Event Which is/was on`)}\n          <b>{` ${new Date(\n            selectedEvent.date\n          ).toDateString()} ${formatWithAMandPM(\n            selectedEvent.time.hr,\n            selectedEvent.time.min\n          )}`}</b>\n        </p>\n      </Message.Header>\n    </Message>\n  );\n\n  const renderSelectAnEventErrorMessage = () => (\n    <Message warning size=\"large\">\n      <Message.Header>\n        <p>\n          {toTitleCase(\n            `please Select An Event to mark attendance ! Click on Select event to continue`\n          )}\n        </p>\n      </Message.Header>\n    </Message>\n  );\n\n  const renderAttendanceFilters = () => {\n    return (\n      <AttendanceRobinFilters\n        onShowEventSelector={setShowEventSelector}\n        onGroupSelect={handleGroupSelect}\n        groups={groups}\n      ></AttendanceRobinFilters>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"m-4\">\n        {renderAttendanceFilters()}\n\n        {selectedEvent\n          ? renderInfoMessageAfterEventSelect()\n          : renderSelectAnEventErrorMessage()}\n\n        {renderEventSelector()}\n        {renderAttendanceMarker()}\n      </div>\n    </Fragment>\n  );\n};\n\nexport { MarkAttendance };\n","import { axios } from \"./axios\";\n\nconst markAttendance = (attendanceData) => {\n  console.log({ attendanceData });\n\n  return axios\n    .post(\"/api/attendances/\", attendanceData)\n    .then(({ data }) => data && data.attendance);\n};\n\nconst getAttendanceOfEvent = (eventId) => {\n  return axios\n    .get(`/api/attendances/event/${eventId}`)\n    .then(({ data }) => data && data.attendances);\n};\n\nexport { markAttendance, getAttendanceOfEvent };\n","import { Fragment, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Divider, Form } from \"semantic-ui-react\";\nimport { getAllGroups } from \"../../../services/group-service\";\nimport { createRobin } from \"../../../services/robin-service\";\nimport { MessageDialog } from \"../common/MessageDialog\";\nimport { GreenButton } from \"../GreenButton\";\n\nconst RobinForm = () => {\n  const formFieldOfTypeTextArea = [\n    {\n      placeholder: \"Address\",\n      name: \"address\",\n      label: \"Address\",\n      required: true,\n      rows: 3,\n    },\n  ];\n\n  const formFieldOfTypeSelect = [\n    {\n      placeholder: \"Group\",\n      name: \"group\",\n      label: \"Select Group\",\n      required: true,\n    },\n  ];\n\n  const formFieldsOfTypeInput = [\n    {\n      type: \"text\",\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      label: \"First Name\",\n      required: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      label: \"Last Name\",\n      required: true,\n    },\n    {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      label: \"Email Address\",\n      required: true,\n    },\n    {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      label: \"Password\",\n      required: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      label: \"Phone\",\n      required: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Profession\",\n      name: \"profession\",\n      label: \"Profession\",\n      required: true,\n    },\n    {\n      type: \"date\",\n      placeholder: \"Date Of Birth\",\n      name: \"DOB\",\n      label: \"Date Of Birth\",\n      required: false,\n    },\n  ];\n\n  const [groups, setGroups] = useState([]);\n\n  // fetch all groups for form\n  useEffect(() => {\n    getAllGroups().then((groups) => {\n      setGroups(groups);\n    });\n  }, []);\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    profession: \"\",\n    DOB: \"2000-01-02\",\n    address: \"\",\n    group: \"-1\",\n    password: \"\",\n  });\n  const [dialogData, setDialogData] = useState({\n    show: false,\n    body: \"Please Add\",\n    title: \"Message\",\n  });\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (!validateForm()) return;\n\n    createRobin(formData).then((response) => {\n      const { robin } = response.data;\n      const temp = {};\n      for (let key in formData) {\n        temp[key] = \"\";\n      }\n      setFormData({ ...temp });\n      setDialogData({\n        ...dialogData,\n        show: true,\n        isError: false,\n        title: \"Success\",\n        body: `${robin.firstName} Created SuccessFuly.`,\n      });\n    });\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const validateForm = () => {\n    const { firstName, lastName, email, group } = formData;\n\n    console.log({ group });\n\n    let message = \"\";\n    if (firstName.length < 5) {\n      message = \"First Name must be 5 or more character long.\";\n    } else if (lastName.length < 2) {\n      message = \"First Name must be 2 or more character long.\";\n    } else if (!validateEmail(email)) {\n      message = \"Invalid Email\";\n    } else if (group === \"-1\") {\n      console.log({ group: \"invalid\" });\n      message = \"Please Select A Group\";\n    }\n    if (message) {\n      changeDialogState({\n        show: true,\n        isError: true,\n        body: message,\n        title: \"Error\",\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const onInputChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    console.log(name, value);\n    console.log(formData);\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const changeDialogState = (state) => {\n    setDialogData({ ...dialogData, ...state });\n  };\n\n  const divClasses = `col-lg-6 mx-auto border p-4 shadow shadow-sm rounded`;\n\n  const getAllFormFields = () => {\n    const inputTypesText = formFieldsOfTypeInput.map(\n      ({ type, placeholder, name, required, label }, index) => (\n        <Form.Field key={index}>\n          <label>{label}</label>\n          <input\n            required={required}\n            placeholder={placeholder}\n            onChange={onInputChange}\n            type={type}\n            value={formData[name]}\n            name={name}\n          />\n        </Form.Field>\n      )\n    );\n\n    const textAreas = formFieldOfTypeTextArea.map(\n      ({ label, required, name, placeholder, rows }, index) => (\n        <Form.Field key={`textarea-${index}`}>\n          <label>{label}</label>\n          <textarea\n            required={required}\n            placeholder={placeholder}\n            onChange={onInputChange}\n            name={name}\n            rows={rows}\n            value={formData[name]}\n          ></textarea>\n        </Form.Field>\n      )\n    );\n\n    const selects = formFieldOfTypeSelect.map(\n      ({ label, name, options, placeholder, required }, index) => (\n        <Form.Field key={Math.random() * 10000}>\n          <label>{label}</label>\n          <select\n            required={required}\n            placeholder={placeholder}\n            onChange={onInputChange}\n            name={name}\n          >\n            <option key={-1} value=\"-1\">\n              Select Group\n            </option>\n            {groups.map(({ title, _id }, index) => (\n              <option key={index} value={_id}>\n                {title}\n              </option>\n            ))}\n          </select>\n        </Form.Field>\n      )\n    );\n\n    return [...inputTypesText, ...textAreas, ...selects];\n  };\n\n  return (\n    <Fragment>\n      {/* Message Dialog  */}\n      <MessageDialog\n        title={dialogData.title}\n        show={dialogData.show}\n        isError={dialogData.isError}\n        onOk={() => changeDialogState({ show: false })}\n      >\n        <p>{dialogData.body}</p>\n      </MessageDialog>\n      {/* container... */}\n      <div className=\"container p-4\">\n        <div className=\"mt-4\">\n          <div className={divClasses}>\n            <div className=\"\">\n              <div>\n                <p className=\"display-6\">Add A Robin</p>\n                <Divider></Divider>\n              </div>\n              <Form onSubmit={handleFormSubmit}>\n                {getAllFormFields()}\n\n                <br />\n                <GreenButton type=\"submit\">Save Robin</GreenButton>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport { RobinForm };\n","import { Fragment, useContext } from \"react\";\nimport { useState } from \"react\";\nimport { Divider, Form } from \"semantic-ui-react\";\nimport { AppContext } from \"../../../App\";\nimport { saveDrive } from \"../../../services/drive-service\";\nimport { MessageDialog } from \"../common/MessageDialog\";\nimport { GreenButton } from \"../GreenButton\";\n\nconst DriveForm = () => {\n  const { setDrives, drives } = useContext(AppContext);\n  const [formData, setFormData] = useState({ drive: \"\" });\n  const [dialogData, setDialogData] = useState({\n    show: false,\n    body: \"Please Add\",\n    title: \"Message\",\n  });\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (!validateForm()) return;\n\n    saveDrive(formData)\n      .then((response) => {\n        return onDriveSave(response.data.drive);\n      })\n      .catch((error) => {\n        console.log({ error });\n        return onDriveSaveError(error?.response?.data.message);\n      });\n  };\n\n  const validateForm = () => {\n    if (!formData.drive || formData.drive.trim().length < 2) {\n      changeDialogState({\n        show: true,\n        isError: true,\n        body: \"Drive must be more then 2 character long.\",\n        title: \"Error\",\n      });\n      return;\n    }\n\n    return true;\n  };\n\n  const onDriveSave = (drive) => {\n    setDrives([...drives, drive]);\n    changeDialogState({\n      show: true,\n      isError: false,\n      body: <p>{drive.drive} Saved sucessfully</p>,\n      title: \"Drive Saved!\",\n    });\n\n    setFormData({ drive: \"\" });\n    return;\n  };\n\n  const onDriveSaveError = (message) => {\n    return changeDialogState({\n      show: true,\n      isError: true,\n      body: message,\n      title: \"Error\",\n    });\n  };\n\n  const onInputChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    setFormData({ [name]: value });\n  };\n\n  const changeDialogState = (state) => {\n    setDialogData({ ...dialogData, ...state });\n  };\n\n  const { drive } = formData;\n  const divClasses = `col-lg-6 mx-auto border p-4 shadow shadow-sm rounded`;\n  return (\n    <Fragment>\n      {/* Message Dialog  */}\n      <MessageDialog\n        title={dialogData.title}\n        show={dialogData.show}\n        isError={dialogData.isError}\n        onOk={() => changeDialogState({ show: false })}\n      >\n        <p>{dialogData.body}</p>\n      </MessageDialog>\n      {/* conatiner... */}\n      <div className=\"conatiner p-4\">\n        <div className=\"mt-4\">\n          <div className={divClasses}>\n            <div className=\"\">\n              <div>\n                <p className=\"display-6\">Add New Drive</p>\n                <Divider></Divider>\n              </div>\n              <Form onSubmit={handleFormSubmit}>\n                <Form.Field>\n                  <label>Drive Title</label>\n                  <input\n                    required\n                    placeholder=\"Title\"\n                    onChange={onInputChange}\n                    value={drive}\n                    name=\"drive\"\n                  />\n                </Form.Field>\n                <br />\n                <GreenButton type=\"submit\">Save Drive</GreenButton>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport { DriveForm };\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport { Button, Divider, Table } from \"semantic-ui-react\";\nimport { AppContext } from \"../../../App\";\nimport { deleteDrive, getAllDrives } from \"../../../services/drive-service\";\nimport { ConfirmationDialog } from \"../common/ConfirmationDialog\";\n\nconst AllDrives = () => {\n  const { drives, setDrives } = useContext(AppContext);\n  const [showModal, setShowModal] = useState(false);\n  const [driveToDelete, setDriveToDelete] = useState(null);\n\n  const handleDelete = () => {\n    console.log(\"We are deleting\", driveToDelete);\n    deleteDrive(driveToDelete.slug).then((response) => {\n      console.log(response);\n      setShowModal(false);\n\n      const updated = drives.filter((drive) => drive._id !== driveToDelete._id);\n      setDrives(updated);\n    });\n  };\n\n  const showModalToConfirm = (drive) => {\n    setDriveToDelete(drive);\n    setShowModal(true);\n  };\n  const changeModelState = (state) => {\n    setShowModal(state);\n  };\n\n  const renderModel = () => {\n    return (\n      driveToDelete && (\n        <ConfirmationDialog\n          title=\"Confirm Deletion\"\n          show={showModal}\n          positiveAction=\"Yes\"\n          positiveActionHandler={() => {\n            handleDelete(driveToDelete);\n          }}\n          negativeAction=\"No\"\n          negativeActionHandler={() => {\n            changeModelState(false);\n          }}\n        >\n          <p>\n            Do you really want to delete <b>{driveToDelete.drive}</b> Drive\n          </p>\n        </ConfirmationDialog>\n      )\n    );\n  };\n\n  const renderTableBody = () => {\n    return (\n      <Table.Body>\n        {drives.map((drive, index) => (\n          <Table.Row key={index}>\n            <Table.Cell>{index + 1}</Table.Cell>\n            <Table.Cell>\n              <h4>{drive.drive}</h4>\n            </Table.Cell>\n            <Table.Cell>\n              {drive.createdAt ? (\n                <Fragment>\n                  {new Date(drive.createdAt).toLocaleDateString()}{\" \"}\n                  {new Date(drive.createdAt).toLocaleTimeString()}\n                </Fragment>\n              ) : (\n                \"Not-Available\"\n              )}\n            </Table.Cell>\n\n            <Table.Cell>{drive.createdBy || \"Not-Available\"}</Table.Cell>\n\n            <Table.Cell>\n              <Button\n                onClick={() => showModalToConfirm(drive)}\n                size=\"mini\"\n                color=\"red\"\n              >\n                Delete\n              </Button>\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    );\n  };\n\n  const rednerTableHeader = () => (\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Sno.</Table.HeaderCell>\n        <Table.HeaderCell>Drive Title</Table.HeaderCell>\n        <Table.HeaderCell>Created At</Table.HeaderCell>\n        <Table.HeaderCell>Created By</Table.HeaderCell>\n        <Table.HeaderCell>Actions</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n  );\n\n  return (\n    <div className=\"conatiner mt-4\">\n      <div className=\"col-lg-8 mx-auto\">\n        <div className=\"col-lg-12 mx-auto\">\n          <h1 className=\"display-6\">All Drives</h1>\n          <Divider></Divider>\n        </div>\n\n        <Table celled>\n          {rednerTableHeader()}\n          {renderTableBody()}\n        </Table>\n      </div>\n\n      {renderModel()}\n    </div>\n  );\n};\n\nexport { AllDrives };\n","import { Fragment, useEffect, useState } from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { getAllGroups, deleteGroup } from \"../../../../services/group-service\";\nimport { ConfirmationDialog } from \"../../common/ConfirmationDialog\";\nimport { AllGroups } from \"./AllGroups\";\nimport { GroupForm } from \"./GroupForm\";\nconst GroupPage = () => {\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    getAllGroups().then((groups) => {\n      setGroups(groups);\n    });\n  }, []);\n\n  const [groupToDelete, setGroupToDelete] = useState(null);\n  const [confirmDialog, setConfirmDialog] = useState({\n    show: false,\n    title: \"Delete Group\",\n    positiveAction: \"Yes\",\n    negativeAction: \"Cancel\",\n  });\n\n  const confirmDelete = (group) => {\n    setGroupToDelete(group);\n    setConfirmDialog({ ...confirmDialog, show: true });\n  };\n\n  const handleDeleteGroup = () => {\n    console.log(\"Dleeting \", groupToDelete);\n    console.error(\"Deletion is Pending...\");\n\n    deleteGroup(groupToDelete._id)\n      .then(() => {\n        const index = groups.findIndex(\n          (group) => group._id === groupToDelete._id\n        );\n        const copy = [...groups];\n        copy.splice(index, 1);\n        setGroups(copy);\n        setConfirmDialog({ ...confirmDialog, show: false });\n      })\n      .catch((err) => {\n        setConfirmDialog({ ...confirmDialog, show: false });\n\n        throw new Error(err);\n      });\n  };\n\n  const tabs = [\n    {\n      menuItem: \"All Groups\",\n      render: () => (\n        <Tab.Pane>\n          <AllGroups groups={groups} onDelete={confirmDelete}></AllGroups>\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: \"Add Group\",\n      render: () => (\n        <Tab.Pane>\n          <GroupForm></GroupForm>\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  return (\n    <Fragment>\n      <ConfirmationDialog\n        {...confirmDialog}\n        positiveActionHandler={handleDeleteGroup}\n        negativeActionHandler={() =>\n          setConfirmDialog({ ...confirmDialog, show: false })\n        }\n      >\n        Do You Really Want To Delete The Group?\n      </ConfirmationDialog>\n      <div className=\"container mt-3\">\n        <Tab panes={tabs} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport { GroupPage };\n","import { useState } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  getAllDrives,\n  getAllEvents,\n  getAllGroups,\n  getAllRobins,\n} from \"../../services/report-service\";\nconst ExportDataPage = () => {\n  const [tableRows, setTableRows] = useState([\n    { title: \"Robins\", function: fetchAllRobins, data: [] },\n    { title: \"Groups\", function: fetchAllGroups, data: [] },\n    { title: \"Drives\", function: fetchAllDrives, data: [] },\n    { title: \"Events\", function: fetchAllEvents, data: [] },\n  ]);\n\n  function updateRowData(title, data) {\n    const copy = [...tableRows];\n    const row = copy.find((row) => row.title.toLowerCase() === title);\n    row.data = data;\n    setTableRows(copy);\n  }\n\n  function fetchAllRobins() {\n    getAllRobins().then((robins) => {\n      const transformed = robins.map((robin) => {\n        const updated = { ...robin };\n        updated.group = robin.group ? robin.group.title : \"No-group\";\n        updated.DOB = new Date(robin.DOB).toDateString();\n        return updated;\n      });\n      updateRowData(\"robins\", transformed);\n    });\n  }\n  function fetchAllDrives() {\n    getAllDrives().then((drives) => {\n      updateRowData(\"drives\", drives);\n    });\n  }\n  function fetchAllGroups() {\n    getAllGroups().then((groups) => {\n      updateRowData(\"groups\", groups);\n    });\n  }\n  function fetchAllEvents() {\n    getAllEvents().then((events) => {\n      updateRowData(\"events\", events);\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <br />\n      <div>\n        <h1 className=\"display-5\">Export Data</h1>\n      </div>\n      <hr />\n      <div>\n        <table className=\"table table-hover table-striped table-bordered \">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Report Of</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows.map((row, index) => (\n              <tr key={`tr-${index}`}>\n                <td>{index + 1}</td>\n                <td>{row.title}</td>\n                <td>\n                  <Button onClick={row.function} size=\"mini\" color=\"green\">\n                    Export\n                  </Button>\n\n                  {row.data.length ? (\n                    <CSVLink\n                      filename={`${row.title}-${new Date().toDateString()}.csv`}\n                      target=\"_blank\"\n                      data={row.data}\n                    >\n                      <Button size=\"mini\" color=\"green\">\n                        Download\n                      </Button>\n                    </CSVLink>\n                  ) : null}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport { ExportDataPage };\n","import { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { DashboardOptions } from \"../ui/DashboardOptions\";\nimport { dashBoardCardOptions } from \"./config\";\n\nconst DashBoard = (props) => {\n  const history = useHistory();\n\n  const onCardClick = (url) => {\n    history.push(url);\n  };\n\n  const { path } = useRouteMatch();\n  return (\n    <div className=\"container-fluid\">\n      <Switch>\n        {dashBoardCardOptions.map(({ url, Component }, index) => (\n          <Route path={url} key={index}>\n            <Component></Component>\n          </Route>\n        ))}\n        <Route path={path} exact>\n          <DashboardOptions\n            {...{ onCardClick, dashBoardCardOptions }}\n          ></DashboardOptions>\n        </Route>\n      </Switch>\n\n      <br />\n      <br />\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport { DashBoard };\n","import { Fragment, useEffect, useState } from \"react\";\nimport { getUpcomingEvents } from \"../../../services/event-service\";\nimport { Card, Image, Icon, Divider } from \"semantic-ui-react\";\n\nconst UpcomingDrives = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getUpcomingEvents().then((events) => {\n      console.log(JSON.stringify(events[0], null, 4));\n      setEvents(\n        events.map((event, index) => {\n          event.image = `/images/thumbnail-${(index + 2) % 3}.png`;\n          const eventDate = new Date(event.date);\n          event.date = eventDate.toDateString();\n          const today = new Date();\n          if (eventDate.getDate() === today.getDate()) {\n            event.date += \" (Today)\";\n          }\n          if (eventDate.getDate() === today.getDate() + 1) {\n            event.date += \" (Tomorrow)\";\n          }\n          const {\n            createdBy: { firstName, lastName },\n          } = event;\n          event.createdBy = `${firstName} ${lastName}`;\n          event.time = new Date(\n            0,\n            0,\n            0,\n            event.time.hr,\n            event.time.min\n          ).toLocaleString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"2-digit\",\n            hour12: true,\n          });\n          return event;\n        })\n      );\n    });\n  }, []);\n  return (\n    <Fragment>\n      <div>\n        <span className=\"display-5\">\n          Upcoming Drives <Icon name=\"clock\" color=\"black\"></Icon>\n        </span>\n\n        <Divider></Divider>\n      </div>\n      <div className=\"row\">\n        {events.map((event, index) => (\n          <div key={index} className=\"mt-4 col-12 col-lg-6\">\n            <Card fluid>\n              <Image src={event.image} wrapped ui={false} />\n              <Card.Content>\n                <Card.Header>\n                  <h3 className=\"m-0\">{event.date}</h3>\n                  <h4 className=\"mt-2\">{event.time}</h4>\n                </Card.Header>\n                <Card.Meta>\n                  <span className=\"date\">Created By {event.createdBy}</span>\n                </Card.Meta>\n                <Card.Description>Location: {event.location}</Card.Description>\n              </Card.Content>\n              <Card.Content extra hidden>\n                <a>\n                  <Icon name=\"user\" />\n                  22 Friends\n                </a>\n              </Card.Content>\n            </Card>\n          </div>\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport { UpcomingDrives };\n","import { UpcomingDrives } from \"../ui/home/UpcomingDrives\";\nconst Home = () => {\n  return (\n    <div className=\"col-lg-8 col-md-10 col-sm-8 col-11 mx-auto\">\n      <br />\n      <UpcomingDrives></UpcomingDrives>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport { Home };\n","import { Fragment, useContext } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Header, Divider } from \"semantic-ui-react\";\nimport { loginRobin } from \"../../services/robin-service\";\nimport { MessageDialog } from \"../ui/common/MessageDialog\";\nimport { GreenButton } from \"../ui/GreenButton\";\nimport { saveToken } from \"../../services/token-service\";\nimport { AuthContext } from \"../../App\";\n\nconst Login = (props) => {\n  const AFTER_LOGIN_URL = \"/dashboard\";\n  const history = useHistory();\n\n  const { onLogin } = useContext(AuthContext);\n\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [dailogInfo, setDialogInfo] = useState({\n    show: false,\n  });\n\n  const onInputChange = ({ target: { name, value } }) => {\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const isFormValid = () => {\n    return true;\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (!isFormValid()) {\n      alert(\"Form Is Not Valid\");\n      return;\n    }\n\n    loginRobin({ ...formValues }).then(({ data: { token, type } }) => {\n      saveToken({ token, type });\n      history.push(AFTER_LOGIN_URL);\n      onLogin();\n    });\n  };\n\n  const { email, password } = formValues;\n  return (\n    <Fragment>\n      <MessageDialog\n        show={dailogInfo.show}\n        title={dailogInfo.title}\n        isError={dailogInfo.isError}\n        onOk={() => setDialogInfo({ ...dailogInfo, show: false })}\n      >\n        {dailogInfo.body}\n      </MessageDialog>\n      <div className=\"container\">\n        <div className=\"col-lg-4 col-md-7 mx-auto mt-4\">\n          <div className=\" border p-4 rounded mt-4 p-4\">\n            {<Header as=\"h1\">Login Here</Header>}\n            <Divider></Divider>\n            <Form onSubmit={handleFormSubmit}>\n              <Form.Field>\n                <label>Email Address</label>\n                <input\n                  required\n                  placeholder=\"Email Address\"\n                  onChange={onInputChange}\n                  value={email}\n                  name=\"email\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input\n                  required\n                  placeholder=\"Password\"\n                  onChange={onInputChange}\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                />\n              </Form.Field>\n              <br />\n              <GreenButton type=\"submit\">Login</GreenButton>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport { Login };\n","const Register = (props)=>{\n  return (\n    <h1>Register page </h1>\n  );\n};\n\n\nexport {Register};\n","import { Redirect, Route, useLocation } from \"react-router-dom\";\nimport { useWinstonLogger } from \"winston-react\";\nimport { getDecodedToken, getToken } from \"../../services/token-service\";\n\nconst PrivateRoute = (props) => {\n  const location = useLocation();\n  const { onlyFor } = props;\n\n  if (getToken()) {\n    const payload = getDecodedToken();\n\n    if (payload) {\n      const { type } = payload;\n      if (onlyFor && type.toLowerCase() === onlyFor.toLowerCase()) {\n        return <Route {...props}>{props.children}</Route>;\n      }\n\n      if (!onlyFor) {\n        return <Route {...props}>{props.children}</Route>;\n      }\n    }\n  }\n\n  return (\n    <Redirect\n      to={{\n        pathname: \"/login\",\n        search: `?returnUrl=${location.pathname}`,\n      }}\n    ></Redirect>\n  );\n};\n\nexport { PrivateRoute };\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\nimport { Layout } from \"./components/layout/Layout\";\nimport { DashBoard } from \"./components/pages/Dashboard\";\nimport { Home } from \"./components/pages/Home\";\nimport { Login } from \"./components/pages/Login\";\nimport { Register } from \"./components/pages/Register\";\nimport { PrivateRoute } from \"./components/private-route/PrivateRoute\";\nimport { getAllDrives } from \"./services/drive-service\";\nimport { getDecodedToken } from \"./services/token-service\";\n\nconst path = require(\"path\");\n\nconst AuthContext = React.createContext();\nconst AppContext = React.createContext();\n\nfunction App() {\n  // alert(process.env.FAST_REFRESH);\n\n  const [authContext, setAuthContext] = useState({\n    onLogin,\n    onLogout,\n    loggedInUser: false,\n  });\n\n  const [drives, setDrives] = useState([]);\n\n  useEffect(() => {\n    const payload = getDecodedToken();\n    setAuthContext({ ...authContext, loggedInUser: payload });\n  }, []);\n  useEffect(() => {\n    getAllDrives().then((drives) => {\n      setDrives(drives);\n    });\n  }, []);\n\n  function onLogin() {\n    setAuthContext({ ...authContext, loggedInUser: getDecodedToken() });\n  }\n  function onLogout() {\n    setAuthContext({ ...authContext, loggedInUser: null });\n  }\n\n  return (\n    <AppContext.Provider value={{ drives, setDrives }}>\n      <AuthContext.Provider value={authContext}>\n        <Router>\n          <Layout></Layout>\n\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n\n            <PrivateRoute path=\"/dashboard\" onlyFor=\"admin\">\n              <DashBoard></DashBoard>\n            </PrivateRoute>\n\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\nexport { AuthContext, AppContext };\n","import React, { Fragment } from \"react\";\nimport { axios } from \"../../services/axios\";\nimport { MessageDialog } from \"../ui/common/MessageDialog\";\n\nclass ErrorBoundary extends React.Component {\n  state = {\n    hasError: false,\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.responseInterceptorId = axios.interceptors.response.use(\n      null,\n      (error) => {\n        const { data } = error\n          ? error.response\n          : { message: \"Internal Server Error\" };\n        if (data) {\n          this.setState({\n            error: data.message,\n            hasError: true,\n          });\n        } else {\n          this.setState({\n            error: \"Something Went Wrong.\",\n            hasError: true,\n          });\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    axios.interceptors.response.eject(this.responseInterceptorId);\n  }\n\n  static getDerivedStateFromError = (error) => {\n    return { hasError: true };\n  };\n\n  componentDidCatch = (error, info) => {\n    this.setState({ error: info, hasError: true });\n  };\n\n  render() {\n    const { hasError, error } = this.state;\n    const { children } = this.props;\n\n    console.log({ hasError, children });\n\n    return (\n      <Fragment>\n        <MessageDialog\n          isError={true}\n          onOk={() => {\n            this.setState({ hasError: false });\n          }}\n          show={hasError}\n        >\n          {error}\n        </MessageDialog>\n        {children}\n      </Fragment>\n    );\n  }\n}\nexport { ErrorBoundary };\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport dotenv from \"dotenv\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ErrorBoundary } from \"./components/error-handler/ErrorBoundary\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { WinstonProvider } from \"winston-react\";\nimport winston from \"winston\";\n\ndotenv.config({});\nconst { REACT_APP_DISABLE_LOGS } = process.env;\n\nconst transports = [];\nif ([\"false\", false].includes(REACT_APP_DISABLE_LOGS)) {\n  transports.push(new winston.transports.Console());\n}\n\nconst logger = winston.createLogger({\n  transports,\n});\n\nReactDOM.render(\n  <WinstonProvider logger={logger}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </WinstonProvider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","import decode_token from \"jwt-decode\";\n\nconst saveToken = ({ token, type }) => {\n  localStorage.setItem(\"token\", JSON.stringify({ token, type }));\n};\n\nconst getToken = () => {\n  const token = localStorage.getItem(\"token\");\n\n  return token ? `${JSON.parse(token).type} ${JSON.parse(token).token}` : null;\n};\n\nconst getDecodedToken = () => {\n  try {\n    const token = getToken();\n    if (token) {\n      return decode_token(token);\n    }\n  } catch (err) {\n    return null;\n  }\n};\n\nexport { getToken, saveToken, getDecodedToken };\n"],"sourceRoot":""}